#==========================================================================================#
#==========================================================================================#
#    Makefile include.mk.opt.odyssey                                                       #
#                                                                                          #
#    Compilation controls optimised for Odyssey cluster at Harvard.                        #
#------------------------------------------------------------------------------------------#

#----- Define make (gnu make works best). -------------------------------------------------#
MAKE=/usr/bin/make
#------------------------------------------------------------------------------------------#



#----- Main path for compilation. ---------------------------------------------------------#
BASE=$(BRAMS_ROOT)/build/
LIBUTILS=$(BASE)/libutils-$(UTILS_VERSION)-opt.a
#------------------------------------------------------------------------------------------#



#------------------------------------------------------------------------------------------#
#    NCAR Graphics.                                                                        #
#                                                                                          #
#    If you are using a standard installation of NCAR Graphics, set:                       #
#                                                                                          #
#       LOADER=ncargf90                                                                    #
#       LIBNCARG=                                                                          #
#                                                                                          #
#    Otherwise set the NCAR dummy libraries...                                             #
#------------------------------------------------------------------------------------------#
NCARG_DIR=$(BASE)
LIBNCARG=$(BASE)/libncarg-$(UTILS_VERSION).a
#------------------------------------------------------------------------------------------#


#------------------------------------------------------------------------------------------#
#    HDF 4 libraries.                                                                      #
#                                                                                          #
#    This is used only if you want to read NDVI files.                                     #
#------------------------------------------------------------------------------------------#
USE_HDF4=0
ifeq($(USE_HDF4),1)
   HDF4_LIBS=-lmfhdf -ldf -lz -ljpeg
else
   HDF4_LIBS=
endif
#------------------------------------------------------------------------------------------#



#------------------------------------------------------------------------------------------#
#    HDF 5 libraries.                                                                      #
#                                                                                          #
#    Since ED-2.1, this is no longer optional for real simulations.  You must have the     #
# HDF5 libraries compiled with the same compiler you set for F_COMP and C_COMP.  You may   #
# still be able to compile without HDF5 but the code is not going to run.                  #
#------------------------------------------------------------------------------------------#
USE_HDF5=1
HDF5_PATH=/n/sw/centos6/hdf5-1.8.11_openmpi-1.7.2_intel-13.0.079
HDF5_INCS=-I$(HDF5_PATH)/include
HDF5_LIBS= -lz -lm -L$(HDF5_PATH)/lib -lhdf5 -lhdf5_fortran -lhdf5_hl
#------------------------------------------------------------------------------------------#


#------------------------------------------------------------------------------------------#
#     Linear Algebra Package (LAPACK) libraries.                                           #
#                                                                                          #
#     Lapack is a well-established package for solving linear systems in Fortran. This is  #
# more efficient than the former built-in solution, and thus it became the new default.    #
# Consequently, it is now required to link the lapack libraries during compilation.        #
#------------------------------------------------------------------------------------------#
LAPACK_PATH=/usr/local/opt/lapack
LAPACK_INCS=-I$(LAPACK_PATH)/include
LAPACK_LIBS=-L$(LAPACK_PATH)/lib -llapack -lblas
#------------------------------------------------------------------------------------------#



#------------------------------------------------------------------------------------------#
#     If you have a version of hdf5 compiled in parallel, then you may benefit from        #
# collective I/O, then use this flag = 1.  Otherwise, set it to zero.                      #
#------------------------------------------------------------------------------------------#
USE_COLLECTIVE_MPIO=0
#------------------------------------------------------------------------------------------#


#------------------------------------------------------------------------------------------#
#     NetCDF libraries.                                                                    #
#                                                                                          #
#    Optional feature to read in the boundary conditions in NetCDF format instead of the   #
# default RALPH2 format.                                                                   #
#------------------------------------------------------------------------------------------#
USENC=0
ifeq($(USENC),1)
   NC_LIBS=-L/n/sw/centos6/netcdf-3.6.3_intel-13.0.079/lib
else
   NC_LIBS=-L/dev/null
endif
#------------------------------------------------------------------------------------------#



#################################### COMPILER SETTINGS #####################################
CMACH=ODYSSEY
F_COMP=mpif90
C_COMP=mpicc
LOADER=mpif90
LIBS=
MOD_EXT=mod
#------------------------------------------------------------------------------------------#



##################################### COMPILER OPTIONS #####################################
#------------------------------------------------------------------------------------------#
# A/B. Pickiest - Use this whenever you change arguments on functions and subroutines.     #
#                 This will perform the same tests as B but it will also check whether all #
#                 arguments match between subroutine declaration and subroutine calls.     #
#                 WARNING: In order to really check all interfaces you must compile with   #
#                          this option twice:                                              #
#                 1. Compile (./install.sh A)                                              #
#                 2. Prepare second compilation(./2ndcomp.sh)                              #
#                 3. Compile one more time (./install.sh B)                                #
#                 If the compilation fails either at step 3, then your code has interface  #
#                 problems. If it successfully compiles, then the code is fine for         #
#                 interfaces.                                                              #
# C. Pickiest with no interface - This will compile fast but the run will be slow due to   #
#    the -O0 option. However, by setting -O0 you will take full advantage of the intel     #
#    debugger.                                                                             #
#    Ideally, you should compile your code with this option whenever you make any changes. #
#    Note, however, that if you change arguments you should first try A.                   #
# D. Fast check - This will check pretty much the same as C, but it will not set up        #
#    anything for the debugger. Use this only if you really don't want to deal with idb or #
#    if you have a good idea of which problem you are dealing with.                        #
# E. Fast - This is all about performance, use only when you are sure that the model has   #
#           no code problem, and you want results asap. This will not check for any        #
#           problems, which means that this is an option suitable for end users, not de-   #
#           velopers.                                                                      #
#------------------------------------------------------------------------------------------#
ifeq ($(KIND_COMP),)
   KIND_COMP=E
endif
#------------------------------------------------------------------------------------------#
ifeq ($(KIND_COMP),A)
   USE_INTERF=0
   F_OPTS= -FR -O0 -recursive  -check all -g -debug extended -debug-parameters used        \
           -fpe0 -no-ftz -traceback -ftrapuv -fp-stack-check -implicitnone                 \
           -assume byterecl -warn unused -warn uncalled -warn usage -gen-interfaces
   C_OPTS= -O0 -DLITTLE  -g -traceback
   LOADER_OPTS=$(F_OPTS)
   #---------------------------------------------------------------------------------------#
endif
ifeq ($(KIND_COMP),B)
   USE_INTERF=0
   F_OPTS= -FR -O0 -recursive  -check all -g -debug extended -debug-parameters used        \
           -fpe0 -no-ftz -traceback -ftrapuv -fp-stack-check -implicitnone                 \
           -assume byterecl -warn unused -warn uncalled -warn usage -warn interfaces
   C_OPTS= -O0 -DLITTLE  -g -traceback
   LOADER_OPTS=$(F_OPTS)
   #---------------------------------------------------------------------------------------#
endif
ifeq ($(KIND_COMP),C)
   USE_INTERF=1
   F_OPTS= -FR -O0 -recursive  -check all -g -debug extended -debug-parameters used        \
           -fpe0 -no-ftz -traceback -ftrapuv -fp-stack-check -implicitnone                 \
           -assume byterecl
   C_OPTS= -O0 -DLITTLE  -g -traceback
   LOADER_OPTS=$(F_OPTS)
   #---------------------------------------------------------------------------------------#
endif
ifeq ($(KIND_COMP),D)
   USE_INTERF=1
   F_OPTS= -FR -O0 -recursive -check all-fpe0 -no-ftz -traceback -ftrapuv -fp-stack-check  \
           -implicitnone -assume byterecl
   C_OPTS= -O0 -DLITTLE  -g -traceback
   LOADER_OPTS=$(F_OPTS)
   #---------------------------------------------------------------------------------------#
endif
ifeq ($(KIND_COMP),E)
   USE_INTERF=1
   F_OPTS= -FR -O3 -recursive -traceback -assume byterecl
   C_OPTS= -O3 -DLITTLE -traceback
   F_LOWO_OPTS=-FR -O2 -recursive -traceback -assume byterecl
   LOADER_OPTS=$(F_OPTS)
   #---------------------------------------------------------------------------------------#
endif
#------------------------------------------------------------------------------------------#
############################################################################################




#------------------------------------------------------------------------------------------#
#     If using mpicc and mpif90 as compilers (recommended), leave MPI_PATH, PAR_INCS, and  #
# PAR_LIBS blank, otherwise provide the includes and libraries for mpi.  Either way, don't #
# change PAR_DEFS unless you know what you are doing.                                      #
#------------------------------------------------------------------------------------------#
MPI_PATH=
PAR_INCS=
PAR_LIBS=
PAR_DEFS=-DRAMS_MPI
#------------------------------------------------------------------------------------------#



#------------------------------------------------------------------------------------------#
#     Archive options.                                                                     #
#------------------------------------------------------------------------------------------#
#------ For IBM, HP, SGI, ALPHA, LINUX, and MAC_OS_X use these. ---------------------------#
ARCHIVE=ar rs
#------ For NEC SX-6. ---------------------------------------------------------------------#
#ARCHIVE=sxar rs
#------ For SUN, CONVEX. ------------------------------------------------------------------#
#ARCHIVE=ar r'
#------------------------------------------------------------------------------------------#

